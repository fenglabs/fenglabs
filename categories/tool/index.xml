<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tool on 晒春风的博客 - 春风十里不如你 - Ten miles of spring breeze is not as good as you</title>
    <link>https://shaichunfeng.com/categories/tool/</link>
    <description>Recent content in tool on 晒春风的博客 - 春风十里不如你 - Ten miles of spring breeze is not as good as you</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>design &amp; develop by shaichunfeng &amp;copy;</copyright>
    <lastBuildDate>Wed, 23 Jun 2021 11:33:41 +0800</lastBuildDate><atom:link href="https://shaichunfeng.com/categories/tool/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mac下使用FreeRDP</title>
      <link>https://shaichunfeng.com/post/2021/06/23/mac-use-freerdp/</link>
      <pubDate>Wed, 23 Jun 2021 11:33:41 +0800</pubDate>
      
      <guid>https://shaichunfeng.com/post/2021/06/23/mac-use-freerdp/</guid>
      <description>FreeRDP是一个远程桌面协议(RDP)的实现，开源免费软件，在Apache许可下发布。要在MacOS系统下安装使用还是有些特别需要注意的地方，记录一下在Mac系统的安装具体步骤方便遇到类似问题的开发者进行参考。
Section1.安装openssl并配置环境变量 如果没有安装openssl请打开 terminal 或 item2 （以下统称终端）执行以下brew命令安装：
1 $ brew install openssl 配置openssl库包配置路径环境变量 编辑 ~/.bashrc 或 ~/.zshrc 配置文件，导出PKG_CONFIG_PATH环境变量，具体如下：
1 export PKG_CONFIG_PATH=$(brew --prefix)/opt/openssl/lib/pkgconfig 保存之后要记得source一下配置文件，否则在当前终端下不生效：
1 $ source ~/.bashrc // 或 source ~/.zshrc Section2.安装X11及配置环境变量 在终端下执行如下命令，安装xquartz(X11)：
1 $ brew install xquartz 设置X11的环境变量 在/tmp/com.apple.launchd.XXXXX目录下找到包含 org.xquartz:0 文件的具体路径。
1 2 $ ls /tmp/com.apple.launchd.7M2pVCoBMU/org.xquartz:0 /tmp/com.apple.launchd.7M2pVCoBMU/org.xquartz:0 将这个路径添加到 ~/.bashrc 或 ~/.</description>
    </item>
    
    <item>
      <title>Makefile快速入门</title>
      <link>https://shaichunfeng.com/post/2021/05/27/makefile-simple-use/</link>
      <pubDate>Thu, 27 May 2021 10:09:51 +0800</pubDate>
      
      <guid>https://shaichunfeng.com/post/2021/05/27/makefile-simple-use/</guid>
      <description>可以这么理解Makefile是用于管理项目的一种工具，它来自GNU，比如您呢好在项目下使用docker-compose工具运行容器，这个时候呢，您一般会输入docker-compose -f docker-compose.yaml up -d 进行项目容器的启动，如果您要把这个容器及网卡等一系列与这个容器服务相关的服务也停止掉的话，您会执行 docker-compose down 命令进行操作，这很好，您如果不嫌麻烦的话您可以先停止掉依赖的网卡了（如果有的话），然后再停止掉容器，这样也是可以的，不过呢，您有没有感觉这么一来，就会很麻烦，Makefile给我们来解决这些个麻烦，您只需要在项目目录下添加一个Makefile即可给您带来极大的方便，如果我们有多个容器要管理的话这个方便之处简直会让您为之大叫~
二、如何编写Makefile？ 我们来说一下就上面我们使用docker-compose管理容器时执行的一系列命令如果让Makefile为我们执行，废话不多话，写一个Makefile，来说明！
2.1、添加Makefile 在您的项目目录下添加一个Makefile
1 $ touch Makefile 2.2、编写Makefile命令 在这个Makefile中我们编写以下代码：
1 2 3 4 5 6 7 .PHONY: docker-compose-up docker-compose-up: docker-compose -f docker-compose.yaml up -d .PHONY: docker-compose-down docker-compose-down: docker-compose down 以上呢我们添加了两个伪命令，这两个伪命令就可以为我们执行容器的启动与停止操作。定义一个伪命令以 .PHONY: 开头，后面就是伪命令名称，然后另起一行，顶格声明这个伪命令以冒号:结尾，然后再另起一行输入这个伪命令要执行的命令，注意要有一个TAB键的缩进，每一个要执行的命令要占一行！这样就声明了一个Makefile伪命令了！
注意：我们一直说它是伪命令，这是相对于系统级别命令而言的命令，所以它在Makefile也只能算是伪命令了！
三、如果使用？ 这些在Makefile文件中定义的伪命令不能像系统级别的命令那样直接输入：
1 $ docker-compose-up 这样执行，系统它不认识它哦！要使用 make 加伪命令的形式才可以：</description>
    </item>
    
    <item>
      <title>格式化curl返回的JSON数据</title>
      <link>https://shaichunfeng.com/post/2021/05/27/format-the-json-data-returned-by-curl/</link>
      <pubDate>Thu, 27 May 2021 10:01:05 +0800</pubDate>
      
      <guid>https://shaichunfeng.com/post/2021/05/27/format-the-json-data-returned-by-curl/</guid>
      <description>在开发的过程中会使用CURL命令请求API接口，而一般情况下API接口也是返回JSON数据，但是如果直接使用 curl -X GET https://news-at.zhihu.com/api/4/news/latest 这种方式访问API接口的话，你会发现终端输出的是一行JSON数据，如果可以美化一下JSON数据在终端输出岂不美哉~
二、格式化CURL返回的JSON数据有两种方式 分别是 PYTHON格式化 和 NODEJS格式化。
2.1、PYTHON格式化 在CURL命令后面添加 | python -m json.tool 即可。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 $ curl -X GET https://news-at.</description>
    </item>
    
  </channel>
</rss>
