<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>RESTful on 晒春风的博客 - 春风十里不如你 - Ten miles of spring breeze is not as good as you</title>
    <link>https://shaichunfeng.com/categories/restful/</link>
    <description>Recent content in RESTful on 晒春风的博客 - 春风十里不如你 - Ten miles of spring breeze is not as good as you</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>design &amp; develop by shaichunfeng &amp;copy;</copyright>
    <lastBuildDate>Sun, 17 May 2020 22:55:15 +0800</lastBuildDate><atom:link href="https://shaichunfeng.com/categories/restful/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>RESTFul接口设计时，添加记录时已存在资源应该返回什么状态码?</title>
      <link>https://shaichunfeng.com/post/2020/05/17/what-status-code-should-an-existing-resource-return-when-adding-a-record/</link>
      <pubDate>Sun, 17 May 2020 22:55:15 +0800</pubDate>
      
      <guid>https://shaichunfeng.com/post/2020/05/17/what-status-code-should-an-existing-resource-return-when-adding-a-record/</guid>
      <description>RESTFul接口设计时，添加记录时如果已存在资源时应该返回什么状态码比较合适? 400? 合适吗?
添加记录 RESTFul接口设计时，对于添加记录或者说是资源时，HTTP请求类型应该是POST方式，那么如果这个资源同名了，应该返回409比较合适，原意为资源冲突，当然话又说过来，对于添加资源更加严谨的流程应该是前端用户输入资源名称后去调用后端API接口检测是否存在同名资源，这样也有利于提高用户体验(这个要看具体的设计，不过一般也都会采用这样机制)，这里仅仅讨论的是后端处理已有资源时应该返回什么样的状态码比较合适的问题~，个人觉得 Conflict 还是比较合适的，你有更好的想法，请留言一起探讨哦~/:ok</description>
    </item>
    
    <item>
      <title>RESTFul接口设计时，退出登录是使用GET请求还是使用POST请求?</title>
      <link>https://shaichunfeng.com/post/2020/05/16/whether-to-logout-using-a-get-request-or-a-post-request/</link>
      <pubDate>Sat, 16 May 2020 22:45:38 +0800</pubDate>
      
      <guid>https://shaichunfeng.com/post/2020/05/16/whether-to-logout-using-a-get-request-or-a-post-request/</guid>
      <description>退出登录就是用户注销其在系统中的登录身份(或者说状态)，那么在开发的时候这个退出(logout)接口应该定义成什么样的请求类型呢？是GET还是POST?
关于注销登录 在各个系统中对于处理注销登录的机制也大同小异，说到注销登录就不得不说一下登录的机制，登录的机制在早期的后端开发中一般情况下是使用SESSION机制，进行标识一个用户登录状态。时下最流行的前后端分离开发模式，后端程序一般都会使用JWT做为认证机制，不管怎么说吧，这些登录机制就是在系统中进行标识用户登录状态，用户注销登录的时候，请求注销接口携带一个用户唯一标识如用户手机号，后端程序根据这个唯一标识去找到登录时在系统签发的唯一标识(一般存放在Redis这种内存级数据库)，将其进行过期或者删除登录标识，这个流程也就完毕了，用户也就退出了系统！
注销接口是该使用GET还是POST 这个问题从安全角度考虑应该使用POST，为什么这么说呢，那就应该从POST请求方式的本质来可虑了，我们都知道它是通过HTTP-Body进行数据携带而不是通过URL，所以应该使用POST请求方式做用户注销接口的定义，那为什么不用GET请求方式做用户注销登录接口的定义呢？原因主要是GET请求浏览器会进行URL缓存操作，所以使用GET请求不够安全！你也可以去验证一下大公司在做用户注销登录的时候，使用什么HTTP请求方式，如：京东，淘宝 之类的！</description>
    </item>
    
  </channel>
</rss>
