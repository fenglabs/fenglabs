<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>reference on 晒春风的博客 - 春风十里不如你 - Ten miles of spring breeze is not as good as you</title>
    <link>https://shaichunfeng.com/tags/reference/</link>
    <description>Recent content in reference on 晒春风的博客 - 春风十里不如你 - Ten miles of spring breeze is not as good as you</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>design &amp; develop by shaichunfeng &amp;copy;</copyright>
    <lastBuildDate>Tue, 19 May 2020 23:14:53 +0800</lastBuildDate><atom:link href="https://shaichunfeng.com/tags/reference/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>如何解决Golang包循环引入问题？</title>
      <link>https://shaichunfeng.com/post/2020/05/19/how-do-i-solve-the-go-package-loop-introduction-problem/</link>
      <pubDate>Tue, 19 May 2020 23:14:53 +0800</pubDate>
      
      <guid>https://shaichunfeng.com/post/2020/05/19/how-do-i-solve-the-go-package-loop-introduction-problem/</guid>
      <description>Go不允许存在包的循环引入，你是不是也在项目开发时遇到过 import cycle not allowed 编译错误呢? 你找到好的解决方案了没有呢? 下文也许可能会对你解决这个问题有所帮助~
何为包的循环引入 如在项目中有bar包和foo包，假如bar包用到了foo包代码，并且foo包也用到了bar包代码，那么这时就会产生编译错误import cycle not allowed意为&amp;quot;不允许循环引入&amp;quot;。
假定示例项目结构如下：
1 2 3 4 5 6 7 8 9 $ depend git:(master) tree . ├── bar │ └── bar.go ├── foo │ └── foo.go └── main.go 2 directories, 3 files bar/bar.go代码如下：
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 package bar import ( &amp;#34;depend/foo&amp;#34; &amp;#34;fmt&amp;#34; ) type Bar struct { Name string Description string } func NewBar(name string, description string) *Bar { return &amp;amp;Bar{Name: name, Description: description} } func (b *Bar) Info() { fmt.</description>
    </item>
    
  </channel>
</rss>
