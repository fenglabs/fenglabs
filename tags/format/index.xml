<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>format on 晒春风的博客 - 春风十里不如你 - Ten miles of spring breeze is not as good as you</title>
    <link>https://shaichunfeng.com/tags/format/</link>
    <description>Recent content in format on 晒春风的博客 - 春风十里不如你 - Ten miles of spring breeze is not as good as you</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>design &amp; develop by shaichunfeng &amp;copy;</copyright>
    <lastBuildDate>Thu, 27 May 2021 10:01:05 +0800</lastBuildDate><atom:link href="https://shaichunfeng.com/tags/format/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>格式化curl返回的JSON数据</title>
      <link>https://shaichunfeng.com/post/2021/05/27/format-the-json-data-returned-by-curl/</link>
      <pubDate>Thu, 27 May 2021 10:01:05 +0800</pubDate>
      
      <guid>https://shaichunfeng.com/post/2021/05/27/format-the-json-data-returned-by-curl/</guid>
      <description>在开发的过程中会使用CURL命令请求API接口，而一般情况下API接口也是返回JSON数据，但是如果直接使用 curl -X GET https://news-at.zhihu.com/api/4/news/latest 这种方式访问API接口的话，你会发现终端输出的是一行JSON数据，如果可以美化一下JSON数据在终端输出岂不美哉~
二、格式化CURL返回的JSON数据有两种方式 分别是 PYTHON格式化 和 NODEJS格式化。
2.1、PYTHON格式化 在CURL命令后面添加 | python -m json.tool 即可。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 $ curl -X GET https://news-at.</description>
    </item>
    
    <item>
      <title>Golang格式化文件大小到可视化大小</title>
      <link>https://shaichunfeng.com/post/2020/05/09/golang-formats-file-size-to-visual-size/</link>
      <pubDate>Sat, 09 May 2020 22:59:44 +0800</pubDate>
      
      <guid>https://shaichunfeng.com/post/2020/05/09/golang-formats-file-size-to-visual-size/</guid>
      <description>在Golang中一个文件大小一般是int64类型的整数，这个类型的对程序而言是好的，不过如果提供前端展示性的数据的话，直接返回过去多少有点太那什么了&amp;hellip;&amp;hellip;这个还需要你和前端同学协商，不官怎么说总得有一方去处理，那这么Go在如何优雅的处理这个转换过程序呢？
可定义如下函数以进行转换操作：
1 2 3 4 5 6 7 8 9 10 11 12 13 // ByteCountBinary format byte size to human readable format. func ByteCountBinary(size int64) string { const unit int64 = 1024 if size &amp;lt; unit { return fmt.Sprintf(&amp;#34;%dB&amp;#34;, size) } div, exp := unit, 0 for n := size / unit; n &amp;gt;= unit; n /= unit { div *= unit exp++ } return fmt.</description>
    </item>
    
  </channel>
</rss>
